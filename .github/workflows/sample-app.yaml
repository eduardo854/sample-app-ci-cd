name: Build and Deploy Application
on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'releases/**'
      - 'release/**'
      - 'develop'
      - 'feature/**'
      - 'feat/**'
      - 'hotfix/**'
    paths-ignore:
      - 'docs/**'
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Create docker image name
        id: docker-image
        run: |
            BRANCH_NAME=${{ github.ref_name }}
            IMAGE_NAME=${BRANCH_NAME}_${{ github.sha }}
            echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT
      - name: Extract repository name
        id: extract-repository-name
        run: |
            REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
            echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_OUTPUT
      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: '${{ secrets.DOCKER_USERNAME }}'
          password: '${{ secrets.DOCKER_PASSWORD }}'
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: >
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ steps.extract-repository-name.outputs.REPO_NAME }}:${{ steps.docker-image.outputs.IMAGE_NAME }}
      - name: Extract Image sha256
        id: image-digest
        run: >
          IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}'
          ${{ github.repository_owner }}/${{ steps.extract-repository-name.outputs.REPO_NAME }}:
          ${{ steps.docker-image.outputs.IMAGE_NAME }} | cut -d "@" -f 2)
          echo "IMAGE_DIGEST=${IMAGE_DIGEST}" >> $GITHUB_OUTPUT
      - name: Setup yq portable command-line YAML, JSON, XML, CSV, TOML and properties processor
        uses: mikefarah/yq@v4.35.2
      - name: Update Yaml Files
        run: >
          ls
          yq -i ".version = \"$(cat VERSION_HELM).${{ github.run_number }}\""
          ./${{ steps.extract-repository-name.outputs.REPO_NAME }}/${{ vars.NAME_HELM_FOLDER }}/Chart.yaml
          yq -i ".appVersion = \"$(cat VERSION)\"" ./${{ steps.extract-repository-name.outputs.REPO_NAME }}/${{ vars.NAME_HELM_FOLDER }}/Chart.yaml
          yq -i '.image.tag = "'"${{ steps.docker-image.outputs.IMAGE_NAME }}@
          ${{ steps.image-digest.outputs.IMAGE_DIGEST }}"'"' ./${{ steps.extract-repository-name.outputs.REPO_NAME }}/${{ vars.NAME_HELM_FOLDER }}/values.yaml
      - name: Set up Helm
        uses: azure/setup-helm@v1
      - name: Package Helm Chart
        run: >
          helm package ./${{ steps.extract-repository-name.outputs.REPO_NAME }}
          helm repo index ./${{ steps.extract-repository-name.outputs.REPO_NAME }} --url ${{ vars.URL_HELM_REPOSITORY }}
